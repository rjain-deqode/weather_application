{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/Chart.js\";\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport faker from \"faker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"Hourly forecast\"\n    }\n  }\n};\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nfunction Chart({\n  xAxis,\n  yAxis\n}) {\n  const [xAxisData, setXAxisData] = console.log(\"11111\", xAxis);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Dataset 1\",\n      data: labels.map(() => faker.datatype.number({\n        min: -1000,\n        max: 1000\n      })),\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/Chart.js"],"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","faker","register","options","responsive","plugins","legend","position","title","display","text","labels","xAxis","yAxis","xAxisData","setXAxisData","console","log","data","datasets","label","map","datatype","number","min","max","borderColor","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAT,OAAO,CAACU,QAAR,CACET,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,OAAO,MAAMI,OAAO,GAAG;AACrBC,EAAAA,UAAU,EAAE,IADS;AAErBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADD;AAIPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE;AAFD;AAJA;AAFY,CAAhB;AAaP,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CAAf;;AAGA,SAASpB,KAAT,CAAe;AAAEqB,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAiC;AAC/B,QAAM,CAACC,SAAD,EAAWC,YAAX,IACNC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB,CADA;AAEA,QAAMM,IAAI,GAAG;AACXP,IAAAA,MADW;AAEXQ,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEF,MAAAA,IAAI,EAAEP,MAAM,CAACU,GAAP,CAAW,MAAMpB,KAAK,CAACqB,QAAN,CAAeC,MAAf,CAAsB;AAAEC,QAAAA,GAAG,EAAE,CAAC,IAAR;AAAcC,QAAAA,GAAG,EAAE;AAAnB,OAAtB,CAAjB,CAFR;AAGEC,MAAAA,WAAW,EAAE,mBAHf;AAIEC,MAAAA,eAAe,EAAE;AAJnB,KADQ;AAFC,GAAb;AAWA,sBACE;AAAA,kCAAO,QAAC,IAAD;AAAM,MAAA,OAAO,EAAExB,OAAf;AAAwB,MAAA,IAAI,EAAEe;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;KAlBQ3B,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport faker from \"faker\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Hourly forecast\",\n    },\n  },\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\n\nfunction Chart({ xAxis, yAxis }) {\n  const [xAxisData,setXAxisData]=\n  console.log(\"11111\", xAxis);\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Dataset 1\",\n        data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n        borderColor: \"rgb(255, 99, 132)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n  return (\n    <div>  <Line options={options} data={data} />\n</div>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}