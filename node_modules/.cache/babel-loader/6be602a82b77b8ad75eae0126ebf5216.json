{"ast":null,"code":"import React from\"react\";import moment from\"moment\";import ChavronIcon from\"./ChavronIcon\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function WeatherDetailsHeader(props){var activeState=props.activeState,activeDate=props.activeDate,setActiveState=props.setActiveState,setRotateState=props.setRotateState,setDailyWeatherDetails=props.setDailyWeatherDetails,setActiveDate=props.setActiveDate,setRotate=props.setRotate,weeklyWeather=props.weeklyWeather;var toggleAccordion=function toggleAccordion(){setActiveState(activeState===\"active\"?\"\":\"active\");setRotateState(activeState===\"active\"?\"accordion__icon\":\"accordion__icon rotate\");};var detailsHandler=function detailsHandler(e){console.log(\"event==\",e);setDailyWeatherDetails({weatherIcon:e.weather[0].icon,daliyMinTemp:e.temp.min,daliyMaxTemp:e.temp.max,dailyDescription:e.weather[0].description,clouds:e.clouds,wind_speed:e.wind_speed,pressure:e.pressure,humidity:e.humidity,uvi:e.uvi,dew_point:e.dew_point,feelsLikeDay:e.feels_like.day,feelsLikeNight:e.feels_like.night,feelsLikeEve:e.feels_like.eve,feelsLikeMorn:e.feels_like.morn,sunrise:moment(e.sunrise).format(\"h:mm a\"),sunset:moment(e.sunset).format(\"h:mm a\")});setActiveDate(e.dt);};return/*#__PURE__*/_jsxs(\"div\",{className:\"accordion\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"days_inner_list\",children:weeklyWeather?weeklyWeather.map(function(value,i){var day=moment.unix(value.dt).utc();if(i<=8){console.log(\"value.dt=====\",day);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"li\",{className:\"day_content \".concat(value.dt===activeDate?\"active\":\"\"),onClick:function onClick(){return value.dt===activeDate?toggleAccordion():detailsHandler(value);},children:[/*#__PURE__*/_jsxs(\"span\",{className:\"gutter__right\",children:[moment(day).format(\"ddd\"),\",\"]}),/*#__PURE__*/_jsx(\"span\",{children:moment(day).format(\"MMMM Do\")})]})});}}):null}),/*#__PURE__*/_jsx(\"div\",{onClick:toggleAccordion,children:/*#__PURE__*/_jsx(ChavronIcon,{className:\"\".concat(setRotate),width:15,height:15,fill:\"#48484A\"})})]});}export default WeatherDetailsHeader;","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/WeatherDetailsHeader.js"],"names":["React","moment","ChavronIcon","WeatherDetailsHeader","props","activeState","activeDate","setActiveState","setRotateState","setDailyWeatherDetails","setActiveDate","setRotate","weeklyWeather","toggleAccordion","detailsHandler","e","console","log","weatherIcon","weather","icon","daliyMinTemp","temp","min","daliyMaxTemp","max","dailyDescription","description","clouds","wind_speed","pressure","humidity","uvi","dew_point","feelsLikeDay","feels_like","day","feelsLikeNight","night","feelsLikeEve","eve","feelsLikeMorn","morn","sunrise","format","sunset","dt","map","value","i","unix","utc"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport ChavronIcon from \"./ChavronIcon\";\n\nfunction WeatherDetailsHeader(props) {\n  const {\n    activeState,\n    activeDate,\n    setActiveState,\n    setRotateState,\n    setDailyWeatherDetails,\n    setActiveDate,\n    setRotate,\n    weeklyWeather,\n  } = props;\n\n  const toggleAccordion = () => {\n    setActiveState(activeState === \"active\" ? \"\" : \"active\");\n    setRotateState(\n      activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\n    );\n  };\n\n  const detailsHandler = (e) => {\n    console.log(\"event==\", e);\n    setDailyWeatherDetails({\n      weatherIcon: e.weather[0].icon,\n      daliyMinTemp: e.temp.min,\n      daliyMaxTemp: e.temp.max,\n      dailyDescription: e.weather[0].description,\n      clouds: e.clouds,\n      wind_speed: e.wind_speed,\n      pressure: e.pressure,\n      humidity: e.humidity,\n      uvi: e.uvi,\n      dew_point: e.dew_point,\n      feelsLikeDay: e.feels_like.day,\n      feelsLikeNight: e.feels_like.night,\n      feelsLikeEve: e.feels_like.eve,\n      feelsLikeMorn: e.feels_like.morn,\n      sunrise: moment(e.sunrise).format(\"h:mm a\"),\n      sunset: moment(e.sunset).format(\"h:mm a\"),\n    });\n    setActiveDate(e.dt);\n  };\n\n  return (\n    <div className={`accordion`}>\n      <ul className=\"days_inner_list\">\n        {weeklyWeather\n          ? weeklyWeather.map((value, i) => {\n              const day = moment.unix(value.dt).utc();\n              if (i <= 8) {\n                console.log(\"value.dt=====\", day);\n                return (\n                  <>\n                    <li\n                      className={`day_content ${\n                        value.dt === activeDate ? \"active\" : \"\"\n                      }`}\n                      onClick={() =>\n                        value.dt === activeDate\n                          ? toggleAccordion()\n                          : detailsHandler(value)\n                      }\n                    >\n                      <span className=\"gutter__right\">\n                        {moment(day).format(\"ddd\")},\n                      </span>\n                      <span>{moment(day).format(\"MMMM Do\")}</span>\n                    </li>\n                  </>\n                );\n              }\n            })\n          : null}\n      </ul>\n      <div onClick={toggleAccordion}>\n        <ChavronIcon\n          className={`${setRotate}`}\n          width={15}\n          height={15}\n          fill={\"#48484A\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherDetailsHeader;\n"]},"metadata":{},"sourceType":"module"}