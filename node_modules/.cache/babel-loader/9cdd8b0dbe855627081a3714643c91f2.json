{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/WeeklyData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Accordion from \"./Accordion\";\nimport \"./Accordion.css\";\nimport ChavronIcon from \"./ChavronIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeeklyData({\n  weeklyWeather,\n  data\n}) {\n  _s();\n\n  // console.log(\"data\", data);\n  const [activeState, setActiveState] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  const toggleAccordion = () => {\n    setActiveState(activeState === \"\" ? \"active\" : \"\");\n    setHeightState(activeState === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`);\n    setRotateState(activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"); // console.log(content.current.scrollHeight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly_weather_data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"8-day forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `day__list ${activeState}`,\n      children: weeklyWeather ? weeklyWeather.map((value, i) => {\n        const day = moment.unix(value.dt).utc();\n\n        if (i <= 8) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"grid-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_list_content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day content\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gutter__right\",\n                  children: [moment(day).format(\"dddd\"), \",\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: moment(day).format(\"MMMM Do, h:mm a\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day__list__values\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"owm_weather_icon\",\n                  src: `http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`,\n                  alt: \"weather-icon\",\n                  width: \"200\",\n                  height: \"200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, this), value.temp.max, \"/\", value.temp.min, \"\\u2103\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather__content\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"weather_description\",\n                    onClick: toggleAccordion,\n                    children: [data.description, \" \", /*#__PURE__*/_jsxDEV(ChavronIcon, {\n                      className: \"\",\n                      width: 10,\n                      fill: \"#777\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), isActive && /*#__PURE__*/_jsxDEV(Accordion, {\n              title: data.description,\n              content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n              setActiveState: setActiveState,\n              activeState: activeState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this);\n        }\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeeklyData, \"YTMvF+VGG7WkzIFOtxq6yzTpbBs=\");\n\n_c = WeeklyData;\nexport default WeeklyData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeklyData\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/WeeklyData.js"],"names":["React","useState","moment","Accordion","ChavronIcon","WeeklyData","weeklyWeather","data","activeState","setActiveState","isActive","setIsActive","toggleAccordion","setHeightState","content","current","scrollHeight","setRotateState","map","value","i","day","unix","dt","utc","format","weather","icon","temp","max","min","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAApB,EAA6C;AAAA;;AAC3C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC5BH,IAAAA,cAAc,CAACD,WAAW,KAAK,EAAhB,GAAqB,QAArB,GAAgC,EAAjC,CAAd;AACAK,IAAAA,cAAc,CACZL,WAAW,KAAK,QAAhB,GAA2B,KAA3B,GAAoC,GAAEM,OAAO,CAACC,OAAR,CAAgBC,YAAa,IADvD,CAAd;AAGAC,IAAAA,cAAc,CACZT,WAAW,KAAK,QAAhB,GAA2B,iBAA3B,GAA+C,wBADnC,CAAd,CAL4B,CAQ5B;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAG,aAAYA,WAAY,EAAxC;AAAA,gBACGF,aAAa,GACVA,aAAa,CAACY,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9B,cAAMC,GAAG,GAAGnB,MAAM,CAACoB,IAAP,CAAYH,KAAK,CAACI,EAAlB,EAAsBC,GAAtB,EAAZ;;AACA,YAAIJ,CAAC,IAAI,CAAT,EAAY;AACV,8BACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAA,6BACGlB,MAAM,CAACmB,GAAD,CAAN,CAAYI,MAAZ,CAAmB,MAAnB,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAA,4BAAOvB,MAAM,CAACmB,GAAD,CAAN,CAAYI,MAAZ,CAAmB,iBAAnB;AAAP;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,kBADZ;AAEE,kBAAA,GAAG,EAAG,oCAAmCN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiBC,IAAK,SAFjE;AAGE,kBAAA,GAAG,EAAC,cAHN;AAIE,kBAAA,KAAK,EAAC,KAJR;AAKE,kBAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,wBADF,EAQGR,KAAK,CAACS,IAAN,CAAWC,GARd,OAQoBV,KAAK,CAACS,IAAN,CAAWE,GAR/B,yBASE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,SAAS,EAAC,qBAFZ;AAGE,oBAAA,OAAO,EAAElB,eAHX;AAAA,+BAKGL,IAAI,CAACwB,WALR,EAKqB,GALrB,eAME,QAAC,WAAD;AACE,sBAAA,SAAS,EAAC,EADZ;AAEE,sBAAA,KAAK,EAAE,EAFT;AAGE,sBAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,4BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAiCGrB,QAAQ,iBACP,QAAC,SAAD;AACE,cAAA,KAAK,EAAEH,IAAI,CAACwB,WADd;AAEE,cAAA,OAAO,EAAC,4EAFV;AAGE,cAAA,cAAc,EAAEtB,cAHlB;AAIE,cAAA,WAAW,EAAED;AAJf;AAAA;AAAA;AAAA;AAAA,oBAlCJ;AAAA,aAA+BY,CAA/B;AAAA;AAAA;AAAA;AAAA,kBADF;AA4CD;AACF,OAhDD,CADU,GAkDV;AAnDN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GA1EQf,U;;KAAAA,U;AA4ET,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Accordion from \"./Accordion\";\nimport \"./Accordion.css\";\nimport ChavronIcon from \"./ChavronIcon\";\n\nfunction WeeklyData({ weeklyWeather, data }) {\n  // console.log(\"data\", data);\n  const [activeState, setActiveState] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  const toggleAccordion = () => {\n    setActiveState(activeState === \"\" ? \"active\" : \"\");\n    setHeightState(\n      activeState === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\n    );\n    // console.log(content.current.scrollHeight);\n  };\n  \n  return (\n    <div className=\"weekly_weather_data\">\n      <h3>8-day forecast</h3>\n      <ul className={`day__list ${activeState}`}>\n        {weeklyWeather\n          ? weeklyWeather.map((value, i) => {\n              const day = moment.unix(value.dt).utc();\n              if (i <= 8) {\n                return (\n                  <li className=\"grid-item\" key={i}>\n                    <div className=\"inner_list_content\">\n                      <div className=\"day content\">\n                        <span className=\"gutter__right\">\n                          {moment(day).format(\"dddd\")},\n                        </span>\n                        <span>{moment(day).format(\"MMMM Do, h:mm a\")}</span>\n                      </div>\n                      <div className=\"day__list__values\">\n                        <img\n                          className=\"owm_weather_icon\"\n                          src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`}\n                          alt=\"weather-icon\"\n                          width=\"200\"\n                          height=\"200\"\n                        />\n                        {value.temp.max}/{value.temp.min}℃\n                        <div className=\"weather__content\">\n                          <button\n                            type=\"button\"\n                            className=\"weather_description\"\n                            onClick={toggleAccordion}\n                          >\n                            {data.description}{\" \"}\n                            <ChavronIcon\n                              className=\"\"\n                              width={10}\n                              fill={\"#777\"}\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    {isActive && (\n                      <Accordion\n                        title={data.description}\n                        content=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n                        setActiveState={setActiveState}\n                        activeState={activeState}\n                      />\n                    )}\n                  </li>\n                );\n              }\n            })\n          : null}\n      </ul>\n    </div>\n  );\n}\n\nexport default WeeklyData;\n"]},"metadata":{},"sourceType":"module"}