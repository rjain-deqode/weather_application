{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/WeeklyData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport Accordion from \"./Accordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeeklyData({\n  weeklyWeather,\n  data\n}) {\n  _s();\n\n  // console.log(\"data\", data);\n  const [activeState, setActiveState] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly_weather_data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"8-day forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"day__list\",\n      children: weeklyWeather ? weeklyWeather.map((value, i) => {\n        const day = moment.unix(value.dt).utc();\n\n        if (i <= 8) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `grid-item ${activeState}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gutter__right\",\n                children: [moment(day).format(\"dddd\"), \",\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: moment(day).format(\"MMMM Do, h:mm a\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day__list__values\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"owm_weather_icon\",\n                src: `http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`,\n                alt: \"weather-icon\",\n                width: \"200\",\n                height: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 23\n              }, this), value.temp.max, \"/\", value.temp.min, \"\\u2103\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather content\",\n                children: /*#__PURE__*/_jsxDEV(Accordion, {\n                  title: data.description,\n                  content: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n                  setActiveState: setActiveState,\n                  activeState: activeState\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 19\n          }, this);\n        }\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeeklyData, \"YbfoCLytdv3RtaQ4/6GWR525C1g=\");\n\n_c = WeeklyData;\nexport default WeeklyData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeklyData\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/WeeklyData.js"],"names":["React","moment","Accordion","WeeklyData","weeklyWeather","data","activeState","setActiveState","useState","map","value","i","day","unix","dt","utc","format","weather","icon","temp","max","min","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAApB,EAA6C;AAAA;;AAC3C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACGJ,aAAa,GACVA,aAAa,CAACK,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9B,cAAMC,GAAG,GAAGX,MAAM,CAACY,IAAP,CAAYH,KAAK,CAACI,EAAlB,EAAsBC,GAAtB,EAAZ;;AACA,YAAIJ,CAAC,IAAI,CAAT,EAAY;AACV,8BACE;AAAI,YAAA,SAAS,EAAG,aAAYL,WAAY,EAAxC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,eAAhB;AAAA,2BACGL,MAAM,CAACW,GAAD,CAAN,CAAYI,MAAZ,CAAmB,MAAnB,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,0BAAOf,MAAM,CAACW,GAAD,CAAN,CAAYI,MAAZ,CAAmB,iBAAnB;AAAP;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,kBADZ;AAEE,gBAAA,GAAG,EAAG,oCAAmCN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiBC,IAAK,SAFjE;AAGE,gBAAA,GAAG,EAAC,cAHN;AAIE,gBAAA,KAAK,EAAC,KAJR;AAKE,gBAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,sBADF,EAQGR,KAAK,CAACS,IAAN,CAAWC,GARd,OAQoBV,KAAK,CAACS,IAAN,CAAWE,GAR/B,yBASE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCAEE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEhB,IAAI,CAACiB,WADd;AAEE,kBAAA,OAAO,EAAC,4EAFV;AAGE,kBAAA,cAAc,EAAEf,cAHlB;AAIE,kBAAA,WAAW,EAAED;AAJf;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAAgDK,CAAhD;AAAA;AAAA;AAAA;AAAA,kBADF;AA6BD;AACF,OAjCD,CADU,GAmCV;AApCN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GA9CQR,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport Accordion from \"./Accordion\";\n\nfunction WeeklyData({ weeklyWeather, data }) {\n  // console.log(\"data\", data);\n  const [activeState, setActiveState] = useState(\"\");\n  return (\n    <div className=\"weekly_weather_data\">\n      <h3>8-day forecast</h3>\n      <ul className=\"day__list\">\n        {weeklyWeather\n          ? weeklyWeather.map((value, i) => {\n              const day = moment.unix(value.dt).utc();\n              if (i <= 8) {\n                return (\n                  <li className={`grid-item ${activeState}`} key={i}>\n                    <div className=\"day content\">\n                      <span className=\"gutter__right\">\n                        {moment(day).format(\"dddd\")},\n                      </span>\n                      <span>{moment(day).format(\"MMMM Do, h:mm a\")}</span>\n                    </div>\n                    <div className=\"day__list__values\">\n                      <img\n                        className=\"owm_weather_icon\"\n                        src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`}\n                        alt=\"weather-icon\"\n                        width=\"200\"\n                        height=\"200\"\n                      />\n                      {value.temp.max}/{value.temp.min}â„ƒ\n                      <div className=\"weather content\">\n                        {/* <p className=\"weather_description\">{data.description}</p> */}\n                        <Accordion\n                          title={data.description}\n                          content=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n                          setActiveState={setActiveState}\n                          activeState={activeState}\n                        />\n                      </div>\n                    </div>\n                  </li>\n                );\n              }\n            })\n          : null}\n      </ul>\n    </div>\n  );\n}\n\nexport default WeeklyData;\n"]},"metadata":{},"sourceType":"module"}