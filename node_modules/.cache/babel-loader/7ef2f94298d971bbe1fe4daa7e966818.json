{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GoogleMap(props) {\n  _s();\n\n  const [isBoolean, setIsBoolean] = useState(true);\n  useEffect(() => {\n    setIsBoolean(toggle);\n  }, [props.aLet, props.aLon]);\n  console.log(\"props===\", props.aLet);\n  console.log(\"props===\", props.aLon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", isBoolean && /*#__PURE__*/_jsxDEV(Map, {\n      google: props.google,\n      zoom: 12,\n      initialCenter: {\n        lat: props.aLet,\n        lng: props.aLon\n      },\n      onReady: props.fetchPlaces,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        onClick: props.onMarkerClick,\n        name: props.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onClose: props.onInfoWindowClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: props.data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GoogleMap, \"/mVsNry/qtqLOJWzpUNPWzbL82U=\");\n\n_c = GoogleMap;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCSn-oTVSgL5rC3C3w5XvGTpx4c8YtKMb4\"\n})(GoogleMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/GoogleMap.js"],"names":["React","useEffect","useState","Map","InfoWindow","Marker","GoogleApiWrapper","GoogleMap","props","isBoolean","setIsBoolean","toggle","aLet","aLon","console","log","google","lat","lng","fetchPlaces","onMarkerClick","data","name","onInfoWindowClose","apiKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,gBAAlC,QAA0D,mBAA1D;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACC,MAAD,CAAZ;AACD,GAFQ,EAEN,CAACH,KAAK,CAACI,IAAP,EAAaJ,KAAK,CAACK,IAAnB,CAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAK,CAACI,IAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAK,CAACK,IAA9B;AACA,sBACE;AAAA,eACG,GADH,EAEGJ,SAAS,iBACR,QAAC,GAAD;AACE,MAAA,MAAM,EAAED,KAAK,CAACQ,MADhB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,aAAa,EAAE;AACbC,QAAAA,GAAG,EAAET,KAAK,CAACI,IADE;AAEbM,QAAAA,GAAG,EAAEV,KAAK,CAACK;AAFE,OAHjB;AAOE,MAAA,OAAO,EAAEL,KAAK,CAACW,WAPjB;AAAA,8BASE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEX,KAAK,CAACY,aAAvB;AAAsC,QAAA,IAAI,EAAEZ,KAAK,CAACa,IAAN,CAAWC;AAAvD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEd,KAAK,CAACe,iBAA3B;AAAA,+BACE;AAAA,iCACE;AAAA,sBAAKf,KAAK,CAACa,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA9BQf,S;;KAAAA,S;AAgCT,eAAeD,gBAAgB,CAAC;AAC9BkB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZjB,SAFY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\n\nfunction GoogleMap(props) {\n  const [isBoolean, setIsBoolean] = useState(true);\n  useEffect(() => {\n    setIsBoolean(toggle);\n  }, [props.aLet, props.aLon]);\n  console.log(\"props===\", props.aLet);\n  console.log(\"props===\", props.aLon);\n  return (\n    <div>\n      {\" \"}\n      {isBoolean && (\n        <Map\n          google={props.google}\n          zoom={12}\n          initialCenter={{\n            lat: props.aLet,\n            lng: props.aLon,\n          }}\n          onReady={props.fetchPlaces}\n        >\n          <Marker onClick={props.onMarkerClick} name={props.data.name} />\n          <InfoWindow onClose={props.onInfoWindowClose}>\n            <div>\n              <h1>{props.data.name}</h1>\n            </div>\n          </InfoWindow>\n        </Map>\n      )}\n    </div>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCSn-oTVSgL5rC3C3w5XvGTpx4c8YtKMb4\",\n})(GoogleMap);\n"]},"metadata":{},"sourceType":"module"}