{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./Accordion.css\";\nimport ChavronIcon from \"./ChavronIcon\";\nimport \"./Accordion.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Accordion(props) {\n  _s();\n\n  console.log(\"days data=====\", props.weeklyWeather);\n  const [setRotate, setRotateState] = useState(\"accordion__icon\");\n  const {\n    activeState,\n    setActiveState\n  } = props;\n  const [dailyWeatherDetails, setDailyWeatherDetails] = useState({\n    weatherIcon: \"\",\n    daliyMinTemp: [],\n    daliyMaxTemp: [],\n    dailyDescription: \"\",\n    clouds: \"\",\n    wind_speed: \"\",\n    pressure: \"\",\n    humidity: \"\",\n    uvi: \"\",\n    dew_point: \"\",\n    feelsLikeDay: \"\",\n    feelsLikeNight: \"\",\n    feelsLikeEve: \"\",\n    feelsLikeMorn: \"\",\n    sunrise: \"\",\n    sunset: \"\"\n  });\n  const [activeDate, setActiveDate] = useState(\"\");\n  const content = useRef(null);\n\n  const toggleAccordion = () => {\n    setActiveState(!activeState);\n    setRotateState(activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\");\n  };\n\n  const detailsHandler = e => {\n    console.log(\"event==\", e);\n    setDailyWeatherDetails({\n      weatherIcon: e.weather[0].icon,\n      daliyMinTemp: e.temp.min,\n      daliyMaxTemp: e.temp.max,\n      dailyDescription: e.weather[0].description,\n      clouds: e.clouds,\n      wind_speed: e.wind_speed,\n      pressure: e.pressure,\n      humidity: e.humidity,\n      uvi: e.uvi,\n      dew_point: e.dew_point,\n      feelsLikeDay: e.feels_like.day,\n      feelsLikeNight: e.feels_like.night,\n      feelsLikeEve: e.feels_like.eve,\n      feelsLikeMorn: e.feels_like.morn,\n      sunrise: e.sunrise,\n      sunset: e.sunset\n    });\n    setActiveDate(e.dt);\n  };\n\n  console.log(\"activeDate=====\", activeDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion__section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion ${activeState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"days_inner_list\",\n          children: props.weeklyWeather ? props.weeklyWeather.map((value, i) => {\n            const day = moment.unix(value.dt).utc();\n\n            if (i <= 8) {\n              console.log(\"value.dt=====\", day);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `day_content ${value.dt === activeDate ? \"active\" : \"\"}`,\n                  onClick: () => value.dt === activeDate ? toggleAccordion() : detailsHandler(value),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"gutter__right\",\n                    children: [moment(day).format(\"ddd\"), \",\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: moment(day).format(\"MMMM Do\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false);\n            }\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: togg,\n          children: /*#__PURE__*/_jsxDEV(ChavronIcon, {\n            className: `${setRotate}`,\n            width: 15,\n            height: 15,\n            fill: \"#48484A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrolling_container_content\",\n        children: dailyWeatherDetails.weatherIcon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top__section\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"owm_weather_icon\",\n              src: `http://openweathermap.org/img/wn/${dailyWeatherDetails.weatherIcon}@2x.png`,\n              alt: \"weather-icon\",\n              width: \"200\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: dailyWeatherDetails.dailyDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"The high will be\", \" \", Math.floor(dailyWeatherDetails.daliyMaxTemp), \"\\u2103, the low will be\", \" \", Math.floor(dailyWeatherDetails.daliyMinTemp), \"\\u2103.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"weather__items\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [dailyWeatherDetails.clouds, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [dailyWeatherDetails.wind_speed, \" m/s WNW\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [dailyWeatherDetails.pressure, \"hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Humidity: \", dailyWeatherDetails.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"UV: \", dailyWeatherDetails.uvi]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Dew point: \", dailyWeatherDetails.dew_point]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Morning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Afternoon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Evening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Night\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"TEMPERATURE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeMorn), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeDay), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeEve), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeNight), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"FEELS LIKE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeMorn), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeDay), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeEve), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Math.floor(dailyWeatherDetails.feelsLikeNight), \"\\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Sunrise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: dailyWeatherDetails.sunrise\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Sunset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: dailyWeatherDetails.sunset\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: \"Select above date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: content,\n      className: \"accordion__content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion__text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accordion, \"kGZCSqDunyQ7HWovgoLLXlo5vNw=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/shared/Accordion.js"],"names":["React","useState","useRef","ChavronIcon","moment","Accordion","props","console","log","weeklyWeather","setRotate","setRotateState","activeState","setActiveState","dailyWeatherDetails","setDailyWeatherDetails","weatherIcon","daliyMinTemp","daliyMaxTemp","dailyDescription","clouds","wind_speed","pressure","humidity","uvi","dew_point","feelsLikeDay","feelsLikeNight","feelsLikeEve","feelsLikeMorn","sunrise","sunset","activeDate","setActiveDate","content","toggleAccordion","detailsHandler","e","weather","icon","temp","min","max","description","feels_like","day","night","eve","morn","dt","map","value","i","unix","utc","format","togg","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Accordion.css\";\nimport ChavronIcon from \"./ChavronIcon\";\nimport \"./Accordion.css\";\nimport moment from \"moment\";\n\nfunction Accordion(props) {\n  console.log(\"days data=====\", props.weeklyWeather);\n  const [setRotate, setRotateState] = useState(\"accordion__icon\");\n  const { activeState, setActiveState } = props;\n\n  const [dailyWeatherDetails, setDailyWeatherDetails] = useState({\n    weatherIcon: \"\",\n    daliyMinTemp: [],\n    daliyMaxTemp: [],\n    dailyDescription: \"\",\n    clouds: \"\",\n    wind_speed: \"\",\n    pressure: \"\",\n    humidity: \"\",\n    uvi: \"\",\n    dew_point: \"\",\n    feelsLikeDay: \"\",\n    feelsLikeNight: \"\",\n    feelsLikeEve: \"\",\n    feelsLikeMorn: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n  });\n\n  const [activeDate, setActiveDate] = useState(\"\");\n\n  const content = useRef(null);\n\n  const toggleAccordion = () => {\n    setActiveState(!activeState);\n    setRotateState(\n      activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\n    );\n  };\n\n  const detailsHandler = (e) => {\n    console.log(\"event==\", e);\n    setDailyWeatherDetails({\n      weatherIcon: e.weather[0].icon,\n      daliyMinTemp: e.temp.min,\n      daliyMaxTemp: e.temp.max,\n      dailyDescription: e.weather[0].description,\n      clouds: e.clouds,\n      wind_speed: e.wind_speed,\n      pressure: e.pressure,\n      humidity: e.humidity,\n      uvi: e.uvi,\n      dew_point: e.dew_point,\n      feelsLikeDay: e.feels_like.day,\n      feelsLikeNight: e.feels_like.night,\n      feelsLikeEve: e.feels_like.eve,\n      feelsLikeMorn: e.feels_like.morn,\n      sunrise: e.sunrise,\n      sunset: e.sunset,\n    });\n    setActiveDate(e.dt);\n  };\n\n  console.log(\"activeDate=====\", activeDate);\n\n  return (\n    <div className=\"accordion__section\">\n      <div className=\"grid-item\">\n        <div className={`accordion ${activeState}`}>\n          <ul className=\"days_inner_list\">\n            {props.weeklyWeather\n              ? props.weeklyWeather.map((value, i) => {\n                  const day = moment.unix(value.dt).utc();\n                  if (i <= 8) {\n                    console.log(\"value.dt=====\", day);\n                    return (\n                      <>\n                        <li\n                          className={`day_content ${\n                            value.dt === activeDate ? \"active\" : \"\"\n                          }`}\n                          onClick={() =>\n                            value.dt === activeDate\n                              ? toggleAccordion()\n                              : detailsHandler(value)\n                          }\n                        >\n                          <span className=\"gutter__right\">\n                            {moment(day).format(\"ddd\")},\n                          </span>\n                          <span>{moment(day).format(\"MMMM Do\")}</span>\n                        </li>\n                      </>\n                    );\n                  }\n                })\n              : null}\n          </ul>\n          <div onClick={togg}>\n            <ChavronIcon\n              className={`${setRotate}`}\n              width={15}\n              height={15}\n              fill={\"#48484A\"}\n            />\n          </div>\n        </div>\n        <div className=\"scrolling_container_content\">\n          {dailyWeatherDetails.weatherIcon ? (\n            <>\n              <div className=\"top__section\">\n                <img\n                  className=\"owm_weather_icon\"\n                  src={`http://openweathermap.org/img/wn/${dailyWeatherDetails.weatherIcon}@2x.png`}\n                  alt=\"weather-icon\"\n                  width=\"200\"\n                  height=\"200\"\n                />\n                <div className=\"inner_content\">\n                  <p>{dailyWeatherDetails.dailyDescription}</p>\n                  <p>\n                    The high will be{\" \"}\n                    {Math.floor(dailyWeatherDetails.daliyMaxTemp)}\n                    ℃, the low will be{\" \"}\n                    {Math.floor(dailyWeatherDetails.daliyMinTemp)}℃.\n                  </p>\n                </div>\n              </div>\n\n              <ul className=\"weather__items\">\n                <li>{dailyWeatherDetails.clouds}%</li>\n                <li>{dailyWeatherDetails.wind_speed} m/s WNW</li>\n                <li>{dailyWeatherDetails.pressure}hPa</li>\n                <li>Humidity: {dailyWeatherDetails.humidity}%</li>\n                <li>UV: {dailyWeatherDetails.uvi}</li>\n                <li>Dew point: {dailyWeatherDetails.dew_point}</li>\n              </ul>\n              <table className=\"table__content\">\n                <tr>\n                  <th></th>\n                  <th>Morning</th>\n                  <th>Afternoon</th>\n                  <th>Evening</th>\n                  <th>Night</th>\n                </tr>\n                <tr>\n                  <td>TEMPERATURE</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeMorn)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeDay)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeEve)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeNight)}℃</td>\n                </tr>\n                <tr>\n                  <td>FEELS LIKE</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeMorn)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeDay)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeEve)}℃</td>\n                  <td>{Math.floor(dailyWeatherDetails.feelsLikeNight)}℃</td>\n                </tr>\n              </table>\n              <div className=\"item_container\">\n                <div className=\"item\">\n                  <span className=\"label\">Sunrise</span>\n                  <span>{dailyWeatherDetails.sunrise}</span>\n                </div>\n                <div className=\"item\">\n                  <span className=\"label\">Sunset</span>\n                  <span>{dailyWeatherDetails.sunset}</span>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"message\">Select above date</div>\n          )}\n        </div>\n      </div>\n\n      {/* <h4 className=\"accordion__title\">{props.title}</h4> */}\n\n      <div ref={content} className=\"accordion__content\">\n        <div className=\"accordion__text\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}