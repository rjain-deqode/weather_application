{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/my_work/React-training-raksha/src/component/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./WeatherApp.css\";\nimport { Input } from \"./Input\";\nimport { Button } from \"./Button\";\nimport axios, { Axios } from \"axios\";\nimport WeeklyData from \"./shared/WeeklyData\";\nimport CurrentData from \"./shared/CurrentData\"; // import Chart from \"./shared/Chart\";\n\nimport Chart from \"./shared/Chart\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentWeather() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [weeklyWeather, setWeeklyWeather] = useState([]);\n  const ref = useRef();\n  const [xAxis, setXais] = useState([]);\n  const [yAxis, setYaxis] = useState([]);\n  const [chartDescription, setchartDescription] = useState([]);\n  const [newChartDes, setNewChartDes] = useState([]);\n  const [data, setData] = useState({\n    temp: 0,\n    minTemperature: [],\n    maxTemperature: [],\n    humidity: \"\",\n    description: \"\",\n    icon: \"\",\n    display: false,\n    pressure: \"\",\n    feelsLike: 0,\n    visibility: \"\",\n    wind: 0,\n    name: \"\"\n  });\n  const [geolocation, setGeolocation] = useState({\n    lat: \"\",\n    log: \"\"\n  });\n  useEffect(() => {\n    if (search === \"\") {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setGeolocation({ ...geolocation,\n          lat: position.coords.latitude,\n          log: position.coords.longitude\n        });\n      });\n    }\n\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function (position) {\n        setGeolocation({ ...geolocation,\n          lat: position.coords.latitude,\n          log: position.coords.longitude\n        });\n      });\n    }\n  }, [geolocation.lat, geolocation.log]);\n  useEffect(() => {\n    if (geolocation.lat && geolocation.log) {\n      fetchData();\n    }\n  }, [geolocation.lat, geolocation.log]);\n\n  const fetchWeatherData = async search => {\n    try {\n      const response = await axios({\n        method: \"GET\",\n        url: `http://api.openweathermap.org/data/2.5/weather?q=${search}&appid=35bd10c223b33cc321caa26ce46f7f0b`\n      });\n      setData({\n        temp: response.data.main.temp - 273.15,\n        humidity: response.data.main.humidity,\n        description: response.data.weather[0].description,\n        icon: response.data.weather[0].icon,\n        display: true,\n        pressure: response.data.main.pressure,\n        feelsLike: response.data.main.feels_like - 273.15,\n        visibility: response.data.visibility,\n        wind: response.data.wind.speed,\n        name: response.data.name\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const fetchData = async search => {\n    const apikey = `https://api.openweathermap.org/data/2.5/onecall?lat=${geolocation.lat}&lon=${geolocation.log}&units=metric&exclude`;\n    const response = await fetch(`${apikey}=current&appid=3c072250b7b95a5b2c1f101aabc82b3a`);\n    const dailyForcast = await fetch(`${apikey}=hourly,daily&appid=3c072250b7b95a5b2c1f101aabc82b3a`);\n    const data = await response.json();\n    const dailyData = await dailyForcast.json();\n    setWeeklyWeather(data.daily);\n    console.log(\"current====\", data);\n    setXais(data.hourly);\n    setYaxis(data.hourly);\n    console.log(\"hourly dataaa\", data.hourly);\n    setchartDescription(data.hourly); // console.log(\"current tem\", dailyData.current);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeatherData(search);\n    fetchData();\n    setSearch(prev => prev);\n  };\n\n  useEffect(() => {\n    ref.current = setSearch;\n  }, []);\n  const newXAxisData = xAxis && xAxis.map(res => {\n    const day = moment.unix(res.dt).utc();\n    return moment(day).format(\"h:mm a\");\n  });\n  const newYAxisData = yAxis && yAxis.map(res => {\n    return res.temp;\n  });\n  const chartDescriptionData = chartDescription && chartDescription.map(res => {\n    return res.weather;\n  });\n  setNewChartDes(chartDescriptionData); // const newChartDescriptionData = chartDescriptionData && chartDescriptionData.map((res)=>{\n  //   return res.weather.description\n  // })\n\n  console.log(\"chart description data\", newChartDes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search__filter\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input__group\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: \"search__filed\",\n            type: \"search\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"Search City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"search__btn\",\n            label: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentData, {\n      display: data.display,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      newXAxisData: newXAxisData,\n      newYAxisData: newYAxisData,\n      dataa: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeeklyData, {\n      weeklyWeather: weeklyWeather,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentWeather, \"Ee7tyactfMAcjhjR3TtyVb4+RLY=\");\n\n_c = CurrentWeather;\nexport default CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/home/deq/Desktop/my_work/React-training-raksha/src/component/CurrentWeather.js"],"names":["React","useState","useEffect","useRef","Input","Button","axios","Axios","WeeklyData","CurrentData","Chart","moment","CurrentWeather","search","setSearch","weeklyWeather","setWeeklyWeather","ref","xAxis","setXais","yAxis","setYaxis","chartDescription","setchartDescription","newChartDes","setNewChartDes","data","setData","temp","minTemperature","maxTemperature","humidity","description","icon","display","pressure","feelsLike","visibility","wind","name","geolocation","setGeolocation","lat","log","navigator","getCurrentPosition","position","coords","latitude","longitude","watchPosition","fetchData","fetchWeatherData","response","method","url","main","weather","feels_like","speed","error","console","message","apikey","fetch","dailyForcast","json","dailyData","daily","hourly","handleSubmit","e","preventDefault","prev","current","newXAxisData","map","res","day","unix","dt","utc","format","newYAxisData","chartDescriptionData","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./WeatherApp.css\";\nimport { Input } from \"./Input\";\nimport { Button } from \"./Button\";\nimport axios, { Axios } from \"axios\";\nimport WeeklyData from \"./shared/WeeklyData\";\nimport CurrentData from \"./shared/CurrentData\";\n// import Chart from \"./shared/Chart\";\nimport Chart from \"./shared/Chart\";\nimport moment from \"moment\";\n\nfunction CurrentWeather() {\n  const [search, setSearch] = useState(\"\");\n  const [weeklyWeather, setWeeklyWeather] = useState([]);\n  const ref = useRef();\n  const [xAxis, setXais] = useState([]);\n  const [yAxis, setYaxis] = useState([]);\n  const [chartDescription, setchartDescription] = useState([])\n  const [newChartDes, setNewChartDes] = useState([])\n\n  const [data, setData] = useState({\n    temp: 0,\n    minTemperature: [],\n    maxTemperature: [],\n    humidity: \"\",\n    description: \"\",\n    icon: \"\",\n    display: false,\n    pressure: \"\",\n    feelsLike: 0,\n    visibility: \"\",\n    wind: 0,\n    name: \"\",\n  });\n\n  const [geolocation, setGeolocation] = useState({\n    lat: \"\",\n    log: \"\",\n  });\n\n  useEffect(() => {\n    if (search === \"\") {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setGeolocation({\n          ...geolocation,\n          lat: position.coords.latitude,\n          log: position.coords.longitude,\n        });\n      });\n    }\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function (position) {\n        setGeolocation({\n          ...geolocation,\n          lat: position.coords.latitude,\n          log: position.coords.longitude,\n        });\n      });\n    }\n  }, [geolocation.lat, geolocation.log]);\n\n  useEffect(() => {\n    if (geolocation.lat && geolocation.log) {\n      fetchData();\n    }\n  }, [geolocation.lat, geolocation.log]);\n\n  const fetchWeatherData = async (search) => {\n    try {\n      const response = await axios({\n        method: \"GET\",\n        url: `http://api.openweathermap.org/data/2.5/weather?q=${search}&appid=35bd10c223b33cc321caa26ce46f7f0b`,\n      });\n      setData({\n        temp: response.data.main.temp - 273.15,\n        humidity: response.data.main.humidity,\n        description: response.data.weather[0].description,\n        icon: response.data.weather[0].icon,\n        display: true,\n        pressure: response.data.main.pressure,\n        feelsLike: response.data.main.feels_like - 273.15,\n        visibility: response.data.visibility,\n        wind: response.data.wind.speed,\n        name: response.data.name,\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const fetchData = async (search) => {\n    const apikey = `https://api.openweathermap.org/data/2.5/onecall?lat=${geolocation.lat}&lon=${geolocation.log}&units=metric&exclude`;\n    const response = await fetch(\n      `${apikey}=current&appid=3c072250b7b95a5b2c1f101aabc82b3a`\n    );\n    const dailyForcast = await fetch(\n      `${apikey}=hourly,daily&appid=3c072250b7b95a5b2c1f101aabc82b3a`\n    );\n    const data = await response.json();\n    const dailyData = await dailyForcast.json();\n    setWeeklyWeather(data.daily);\n    console.log(\"current====\", data);\n    setXais(data.hourly);\n    setYaxis(data.hourly)\n    console.log(\"hourly dataaa\",data.hourly)\n    setchartDescription(data.hourly)\n\n    // console.log(\"current tem\", dailyData.current);\n  };\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchWeatherData(search);\n    fetchData();\n    setSearch((prev) => prev);\n  };\n\n  useEffect(() => {\n    ref.current = setSearch;\n  }, []);\n\n  const newXAxisData =\n    xAxis &&\n    xAxis.map((res) => {\n      const day = moment.unix(res.dt).utc();\n      return moment(day).format(\"h:mm a\")\n    });\n  const newYAxisData = yAxis && yAxis.map((res)=>{\n    return res.temp\n  })\n  const chartDescriptionData = chartDescription && chartDescription.map((res)=>{\n    return res.weather\n  })\n\n  setNewChartDes(chartDescriptionData)\n  // const newChartDescriptionData = chartDescriptionData && chartDescriptionData.map((res)=>{\n  //   return res.weather.description\n  // })\n  console.log(\"chart description data\",  newChartDes )\n  return (\n    <div>\n      <div className=\"app__header\">\n        <form className=\"search__filter\" onSubmit={handleSubmit}>\n          <div className=\"input__group\">\n            <Input\n              className=\"search__filed\"\n              type=\"search\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              placeholder=\"Search City\"\n            ></Input>\n            <Button type=\"submit\" className=\"search__btn\" label={\"Search\"} />\n          </div>\n        </form>\n      </div>\n      <CurrentData display={data.display} data={data} />\n      <Chart newXAxisData={newXAxisData} newYAxisData={newYAxisData} dataa={data}  />\n      <WeeklyData weeklyWeather={weeklyWeather} data={data} />\n    </div>\n  );\n}\n\nexport default CurrentWeather;\n"]},"metadata":{},"sourceType":"module"}